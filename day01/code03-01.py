print("안녕")

print("100") # String 형
print(100) # int 형

print("%d" % 100)  # %d 는 'digit' 의 약자, 즉 숫자를 끼워넣겠다는 의미이다
print("%d" % 100); print()  # 한줄 띄움을 할 수 있다

print(100, 200)  # 쉼표는 한칸 띄움
print("%d, %d" % (100, 200))  # 숫자 사이에 연산기호 등 복잡하게 구성되어 있는 경우에 씀 !
print("%d와 %d" % (100, 200))

print(100, "+", 200, "=", 100 + 200)
print("%d + %d = %d" % (100, 200, 100 + 200))  # 위 코드와 결과값은 같다 !

print("%d / %d = %d" % (100, 200, 100 / 200))  # %d 는 십진법인 digit의 약자이기 때문에 정수로만 나타낼 수 있다 !
print("%d / %d = %f" % (100, 200, 100 / 200))  # 실수로 답을 나타내려면 %f 로 쓴다 !
print("%d / %d = %.1f" % (100, 200, 100 / 200))  # 실수로 답을 나타내려면 %f 로 쓴다 !

print(100/200)
print(int(0.5))

print("%d" % 123)
print("%5d" % 123)  # 전체 자릿수가 5이고 우측정렬되어 출력 (우측정렬이 default)
print("%05d" % 123)  # 전체 자릿수가 5이고 공백은 0으로 채워 우측정렬되어 출력 (우측정렬이 default)
print("%-5d\n" % 123)  # 전체 자릿수가 5이고 좌측정렬되어 출력

print("%f" % 123.45)  # 소수점 뒤 6자리가 default
print("%.2f" % 123.45)  # 소수점 뒤 2자리까지 출력
print("%7.2f\n" % 123.45)  # 소수점과 소수점의 뒷자리까지 포함한 전체자리수가 총 7자리이고 우측정렬되어 소수점 뒤 2자리까지 출력

print("%s" % "Python")
print("%10s\n" % "Python")  # 전체 글자수가 10자리이고 우측정렬되어 출력

print("%d %5d %05d" % (123, 456, 789))
print("{0:d} {1:5d} {2:05d}".format(123, 456, 789))  # 위 코드와 동일한 결과 출력
print("{1:d} {2:5d} {0:05d}".format(123, 456, 789))  # 콜론(:) 앞 숫자는 배열의 index를 의미 -> format을 이용해 순서를 제어할 수 있음!
