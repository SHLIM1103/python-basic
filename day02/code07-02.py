a = [10, 20, 30, 40]

""" 리스트의 범위 """
print(a[0])
print(a[3])
# print(a[4])  # 에러
print(a[-1])  # 뒤에서부터 출력
print(a[-4])
# print(a[-5])  # 에러
print(a[0:3])  # 결과: [10, 20, 30] -> index 0 부터 index 3-1 까지 출력
print(a[2:])  # 결과: [30, 40] -> index 2 부터 끝까지 출력
print(a[:2])  # 결과: [10, 20] -> 처음부터 index 2-1 까지 출력
print(a)  # 배열 전체 출력

b = [50, 60, 70, 80]
print(a + b)  # 결과: [10, 20, 30, 40, 50, 60, 70, 80]
print(a * 3)  # 결과: [10, 20, 30, 40, 10, 20, 30, 40, 10, 20, 30, 40] -> a 배열 3번 반복해서 출력
print(a[0:4:2])  # 결과: [10, 30] -> index 0 ~ 4 까지 2씩 건너뛰어 출력
print(a[::2])  # 결과: [10, 30] -> 처음부터 끝까지 2씩 건너뛰어 출력
print(a[1::2])  # 결과: [20, 40]
print(a[-1::-2])  # 결과: [40, 20] -> 끝값부터 처음까지 2씩 앞으로 건너뛰어 출력
print(a[::-2])  # 결과: [40, 20]
print(a[2::-2])  # 결과: [30, 10] -> index 2 부터 2씩 앞으로 건너뛰어 출력
print(a[::-1])  # 결과: [40, 30, 20, 10] -> 배열을 역순으로 출력
print(a)  # 결과: [10, 20, 30, 40] -> 배열 a 는 그대로 유지

a.reverse() ; print(a)  # 결과: [40, 30, 20, 10] -> 배열 a 가 역순으로 변경되어 유지
a.reverse() ; print(a)

""" 리스트의 변경 :: 단일 인덱스 <- 단일값 // 범위의 형태 <- [리스트] """
a[1] = 200  # 결과: [40, 200, 20, 10]
# a[1:2] = 200  # 에러 -> 범위 지정 시 리스트 형태로만 대입해야 함
a[1:2] = [200]  # 결과: [40, 200, 20, 10]
a[1:3] = [200]  # 결과: [40, 200, 10] -> index 1 ~ 3-1 까지 200 으로 대체
a[1:3] = [200, 201, 202]  # 결과: [10, 200, 201, 202, 40] -> index 1 ~ 3-1 까지 리스트 내 요소로 변경
# a[1:4:2] = [200, 201, 203]  # 에러 -> 불연속한 범위에는 더 큰 사이즈의 리스트를 대입하지 못함
a[2:0:-1] = [200, 201]  # 결과: [10, 201, 200, 40] -> index 2부터 역순으로 2개의 값을 바꿈
a[2:0:1] = [200, 201]  # 결과: [10, 20, 200, 201, 30, 40] -> 범위 지정이 잘못되어 index 2 만 변경 (오류는 발생X, 실제로는 2번과 3번 사이가 추가된 것)
a[2:3:1] = [200, 201] # 결과: [10, 20, 200, 201, 40]

""" 다중리스트 :: 단일 요소에 리스트를 넣으면 다중리스트가 됨 """
# a[1] = 200
# a[1] = [200]
# a[1] = [200, 201, 202]  # [10, [200, 201, 202], 30, 40]
# del (a[1])  # [10, 30, 40]
# del (a[1:3])  # [10, 40]
# a[1:3] = []  # [10, 40], 위와 동일
# a[1] = []  # [10, [], 30, 40] -> 주의: 삭제가 아닌, 다중리스트가 생성되는 것
# del a  # NameError: name 'a' is not defined -> 리스트 자체를 삭제하는 것이므로 print(a) 가 되지 않음
# del (a[:])  # 리스트 자체는 있지만 내부 요소는 모두 비움
# a = []  # 위와 동일. 리스트는 있지만 내부 요소는 모두 비움
# a = None  # 리스트 상태가 아닌 None 대입

print(a)
